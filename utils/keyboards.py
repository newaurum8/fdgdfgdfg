from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from typing import List, Optional
from config import Config

class Keyboards:
    
    @staticmethod
    def main_menu() -> ReplyKeyboardMarkup:
        """Main menu keyboard"""
        keyboard = [
            ["üì¢ –°–¥–µ–ª–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ", "üí¨ –ß–∞—Ç—ã"],
            ["üë§ –ü—Ä–æ—Ñ–∏–ª—å", "üìò FAQ"],
            ["üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞"]
        ]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)
    
    @staticmethod
    def announcement_types() -> InlineKeyboardMarkup:
        """Announcement types selection"""
        keyboard = [
            [InlineKeyboardButton("‚ñ∂Ô∏è –°–¥–µ–ª–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ", callback_data="announce_create")],
            [InlineKeyboardButton("üîç –ù–∞–π—Ç–∏", callback_data="announce_search")],
            [InlineKeyboardButton("üì£ –ê—É–∫—Ü–∏–æ–Ω", callback_data="announce_auction")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_main")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def sell_or_buy() -> InlineKeyboardMarkup:
        """Sell or buy selection"""
        keyboard = [
            [InlineKeyboardButton("üí∞ –ü—Ä–æ–¥–∞—Ç—å", callback_data="type_sell")],
            [InlineKeyboardButton("üõí –ö—É–ø–∏—Ç—å", callback_data="type_buy")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_announce")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def price_type() -> InlineKeyboardMarkup:
        """Price type selection"""
        keyboard = [
            [InlineKeyboardButton("üíµ –£–∫–∞–∑–∞—Ç—å —Ü–µ–Ω—É", callback_data="price_fixed")],
            [InlineKeyboardButton("üí¨ –î–æ–≥–æ–≤–æ—Ä–Ω–∞—è", callback_data="price_negotiable")],
            [InlineKeyboardButton("üÜì –ë–µ–∑ —Ü–µ–Ω—ã", callback_data="price_none")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_step")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def yes_no(yes_callback: str, no_callback: str) -> InlineKeyboardMarkup:
        """Generic yes/no keyboard"""
        keyboard = [
            [InlineKeyboardButton("‚úÖ –î–∞", callback_data=yes_callback)],
            [InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data=no_callback)]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def post_actions(post_id: int) -> InlineKeyboardMarkup:
        """Actions for a post"""
        keyboard = [
            [InlineKeyboardButton("üîÅ –ü—Ä–æ–¥–ª–∏—Ç—å", callback_data=f"extend_post_{post_id}")],
            [InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_post_{post_id}")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def auction_timer() -> InlineKeyboardMarkup:
        """Auction timer selection"""
        keyboard = []
        for timer in Config.AUCTION_TIMERS:
            if timer < 60:
                label = f"{timer} –º–∏–Ω"
            else:
                label = f"{timer // 60} —á–∞—Å"
            keyboard.append([InlineKeyboardButton(label, callback_data=f"timer_{timer}")])
        keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_step")])
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def open_in_bot(post_unique_id: str) -> InlineKeyboardMarkup:
        """Open in bot button for channel posts"""
        keyboard = [
            [InlineKeyboardButton("üì© –û—Ç–∫—Ä—ã—Ç—å –≤ –±–æ—Ç–µ", url=f"https://t.me/{Config.BOT_TOKEN.split(':')[0]}?start=post_{post_unique_id}")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def contact_seller(chat_id: int) -> InlineKeyboardMarkup:
        """Contact seller button"""
        keyboard = [
            [InlineKeyboardButton("üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º", callback_data=f"contact_{chat_id}")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def chat_actions(chat_id: int) -> InlineKeyboardMarkup:
        """Chat action buttons"""
        keyboard = [
            [InlineKeyboardButton("ü§ù –ù–∞—á–∞—Ç—å —Å–¥–µ–ª–∫—É", callback_data=f"start_transaction_{chat_id}")],
            [InlineKeyboardButton("‚ùå –ó–∞–∫—Ä—ã—Ç—å —á–∞—Ç", callback_data=f"close_chat_{chat_id}")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def transaction_actions(transaction_id: int) -> InlineKeyboardMarkup:
        """Transaction action buttons"""
        keyboard = [
            [InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ", callback_data=f"confirm_transaction_{transaction_id}")],
            [InlineKeyboardButton("‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Å–¥–µ–ª–∫–∏", callback_data=f"cancel_transaction_{transaction_id}")],
            [InlineKeyboardButton("üÜò –ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å", callback_data=f"help_transaction_{transaction_id}")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def commission_split() -> InlineKeyboardMarkup:
        """Commission payment options"""
        keyboard = [
            [InlineKeyboardButton("ü§µ –ü—Ä–æ–¥–∞–≤–µ—Ü –ø–ª–∞—Ç–∏—Ç", callback_data="commission_seller")],
            [InlineKeyboardButton("üõí –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –ø–ª–∞—Ç–∏—Ç", callback_data="commission_buyer")],
            [InlineKeyboardButton("‚öñÔ∏è –ü–æ—Ä–æ–≤–Ω—É (50/50)", callback_data="commission_split")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_step")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def payment_methods() -> InlineKeyboardMarkup:
        """Payment method selection"""
        keyboard = [
            [InlineKeyboardButton("üí≥ UA-–∫–∞—Ä—Ç–∞", callback_data="payment_ua_card")],
            [InlineKeyboardButton("‚Çø –ö—Ä–∏–ø—Ç–∞ (TON)", callback_data="payment_crypto_ton")],
            [InlineKeyboardButton("üí∞ –ö—Ä–∏–ø—Ç–∞ (USDT)", callback_data="payment_crypto_usdt")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_step")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def rating_keyboard() -> InlineKeyboardMarkup:
        """Rating selection 1-5"""
        keyboard = []
        for i in range(1, 6):
            stars = "‚≠ê" * i
            keyboard.append([InlineKeyboardButton(f"{stars} {i}", callback_data=f"rating_{i}")])
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_user_actions(user_id: int) -> InlineKeyboardMarkup:
        """Admin actions for user management"""
        keyboard = [
            [InlineKeyboardButton("üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"admin_ban_{user_id}")],
            [InlineKeyboardButton("‚ö†Ô∏è –ü–æ–º–µ—Ç–∏—Ç—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º", callback_data=f"admin_suspicious_{user_id}")],
            [InlineKeyboardButton("‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"admin_unban_{user_id}")],
            [InlineKeyboardButton("üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data=f"admin_balance_{user_id}")],
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=f"admin_stats_{user_id}")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_transaction_actions(transaction_id: int) -> InlineKeyboardMarkup:
        """Admin actions for transaction management"""
        keyboard = [
            [InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –≤—ã–ø–ª–∞—Ç–∏—Ç—å", callback_data=f"admin_confirm_{transaction_id}")],
            [InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"admin_reject_{transaction_id}")],
            [InlineKeyboardButton("‚è∞ –ü—Ä–æ–¥–ª–∏—Ç—å –≤—Ä–µ–º—è", callback_data=f"admin_extend_{transaction_id}")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def auction_actions(post_id: int) -> InlineKeyboardMarkup:
        """Auction management buttons"""
        keyboard = [
            [InlineKeyboardButton("üí∞ –°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É", callback_data=f"auction_bid_{post_id}")],
            [InlineKeyboardButton("üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∞—É–∫—Ü–∏–æ–Ω", callback_data=f"auction_end_{post_id}")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def bid_actions(bid_id: int) -> InlineKeyboardMarkup:
        """Bid management buttons"""
        keyboard = [
            [InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"bid_accept_{bid_id}")],
            [InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"bid_reject_{bid_id}")],
            [InlineKeyboardButton("üë§ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data=f"bid_profile_{bid_id}")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def games_pagination(games: List, page: int = 0, page_size: int = 8) -> InlineKeyboardMarkup:
        """Paginated games selection"""
        keyboard = []
        start_idx = page * page_size
        end_idx = start_idx + page_size
        
        # Add game buttons
        for i in range(start_idx, min(end_idx, len(games))):
            game = games[i]
            keyboard.append([InlineKeyboardButton(game.name, callback_data=f"game_{game.id}")])
        
        # Add pagination buttons
        nav_row = []
        if page > 0:
            nav_row.append(InlineKeyboardButton("‚¨ÖÔ∏è", callback_data=f"games_page_{page-1}"))
        if end_idx < len(games):
            nav_row.append(InlineKeyboardButton("‚û°Ô∏è", callback_data=f"games_page_{page+1}"))
        if nav_row:
            keyboard.append(nav_row)
            
        # Add "no game" option and back button
        keyboard.append([InlineKeyboardButton("üö´ –ù–µ—Ç –∏–≥—Ä—ã –≤ —Å–ø–∏—Å–∫–µ", callback_data="game_none")])
        keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_step")])
        
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def admin_main_panel() -> InlineKeyboardMarkup:
        """Admin main panel keyboard"""
        keyboard = [
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")],
            [InlineKeyboardButton("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", callback_data="admin_users")],
            [InlineKeyboardButton("ü§ù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∞–º–∏", callback_data="admin_transactions")],
            [InlineKeyboardButton("üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")],
            [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="admin_settings")],
            [InlineKeyboardButton("üìà –û—Ç—á—ë—Ç—ã", callback_data="admin_reports")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_users_menu() -> InlineKeyboardMarkup:
        """Admin users management menu"""
        keyboard = [
            [InlineKeyboardButton("üîç –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="admin_find_user")],
            [InlineKeyboardButton("üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ", callback_data="admin_users_banned")],
            [InlineKeyboardButton("‚ö†Ô∏è –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ", callback_data="admin_users_suspicious")],
            [InlineKeyboardButton("‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ", callback_data="admin_users_active")],
            [InlineKeyboardButton("üèÜ –¢–æ–ø –ø—Ä–æ–¥–∞–≤—Ü—ã", callback_data="admin_users_top")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back_main")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_transactions_menu() -> InlineKeyboardMarkup:
        """Admin transactions management menu"""
        keyboard = [
            [InlineKeyboardButton("‚è≥ –û–∂–∏–¥–∞—é—â–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏", callback_data="admin_trans_pending")],
            [InlineKeyboardButton("üí∞ –û–∂–∏–¥–∞—é—â–∏–µ –æ–ø–ª–∞—Ç—ã", callback_data="admin_trans_payment")],
            [InlineKeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ", callback_data="admin_trans_completed")],
            [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω—ë–Ω–Ω—ã–µ", callback_data="admin_trans_cancelled")],
            [InlineKeyboardButton("üîç –ù–∞–π—Ç–∏ —Å–¥–µ–ª–∫—É", callback_data="admin_find_transaction")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back_main")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_stats_menu() -> InlineKeyboardMarkup:
        """Admin statistics menu"""
        keyboard = [
            [InlineKeyboardButton("üìÖ –°–µ–≥–æ–¥–Ω—è", callback_data="admin_stats_today")],
            [InlineKeyboardButton("üìä –ù–µ–¥–µ–ª—è", callback_data="admin_stats_week")],
            [InlineKeyboardButton("üìà –ú–µ—Å—è—Ü", callback_data="admin_stats_month")],
            [InlineKeyboardButton("üéØ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats_all")],
            [InlineKeyboardButton("üí∞ –î–æ—Ö–æ–¥—ã", callback_data="admin_stats_revenue")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back_main")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_broadcast_menu() -> InlineKeyboardMarkup:
        """Admin broadcast menu"""
        keyboard = [
            [InlineKeyboardButton("üì¢ –í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º", callback_data="admin_broadcast_all")],
            [InlineKeyboardButton("‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º", callback_data="admin_broadcast_active")],
            [InlineKeyboardButton("üèÜ –¢–æ–ø –ø—Ä–æ–¥–∞–≤—Ü–∞–º", callback_data="admin_broadcast_sellers")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back_main")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_settings_menu() -> InlineKeyboardMarkup:
        """Admin settings menu"""
        keyboard = [
            [InlineKeyboardButton("üí∞ –¶–µ–Ω—ã", callback_data="admin_settings_prices")],
            [InlineKeyboardButton("‚è∞ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã", callback_data="admin_settings_timers")],
            [InlineKeyboardButton("üõ°Ô∏è –ê–Ω—Ç–∏—Å–ø–∞–º", callback_data="admin_settings_antispam")],
            [InlineKeyboardButton("üìä –§–∞–π–ª—ã", callback_data="admin_settings_files")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back_main")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_reports_menu() -> InlineKeyboardMarkup:
        """Admin reports menu"""
        keyboard = [
            [InlineKeyboardButton("üìÑ –î–Ω–µ–≤–Ω–æ–π –æ—Ç—á—ë—Ç", callback_data="admin_report_daily")],
            [InlineKeyboardButton("üìä –ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç", callback_data="admin_report_weekly")],
            [InlineKeyboardButton("üìà –ú–µ—Å—è—á–Ω—ã–π –æ—Ç—á—ë—Ç", callback_data="admin_report_monthly")],
            [InlineKeyboardButton("üìß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ –æ—Ç—á—ë—Ç–æ–≤", callback_data="admin_report_settings")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back_main")]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_user_management(user_id: int, current_status: str) -> InlineKeyboardMarkup:
        """Enhanced admin user management keyboard"""
        keyboard = []
        
        # Status management buttons based on current status
        if current_status == "banned":
            keyboard.append([InlineKeyboardButton("‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"admin_unban_{user_id}")])
        else:
            keyboard.append([InlineKeyboardButton("üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"admin_ban_{user_id}")])
        
        if current_status != "suspicious":
            keyboard.append([InlineKeyboardButton("‚ö†Ô∏è –ü–æ–º–µ—Ç–∏—Ç—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º", callback_data=f"admin_suspicious_{user_id}")])
        else:
            keyboard.append([InlineKeyboardButton("‚úÖ –£–±—Ä–∞—Ç—å –ø–æ–º–µ—Ç–∫—É", callback_data=f"admin_unsuspicious_{user_id}")])
        
        # Additional actions
        keyboard.extend([
            [InlineKeyboardButton("üìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=f"admin_user_stats_{user_id}")],
            [InlineKeyboardButton("üí¨ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data=f"admin_message_{user_id}")],
            [InlineKeyboardButton("üìù –ü–æ—Å—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data=f"admin_user_posts_{user_id}")],
            [InlineKeyboardButton("ü§ù –°–¥–µ–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data=f"admin_user_transactions_{user_id}")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_users")]
        ])
        
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_transaction_management(transaction_id: int, status: str) -> InlineKeyboardMarkup:
        """Enhanced admin transaction management keyboard"""
        keyboard = []
        
        if status == "verification_pending":
            keyboard.extend([
                [InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É", callback_data=f"admin_verify_approve_{transaction_id}")],
                [InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É", callback_data=f"admin_verify_reject_{transaction_id}")]
            ])
        elif status == "completed":
            keyboard.extend([
                [InlineKeyboardButton("üí∞ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –≤—ã–ø–ª–∞—Ç–∏—Ç—å", callback_data=f"admin_payout_{transaction_id}")],
                [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É", callback_data=f"admin_cancel_{transaction_id}")]
            ])
        elif status == "in_progress":
            keyboard.extend([
                [InlineKeyboardButton("‚è∞ –ü—Ä–æ–¥–ª–∏—Ç—å –≤—Ä–µ–º—è", callback_data=f"admin_extend_time_{transaction_id}")],
                [InlineKeyboardButton("üÜò –í–º–µ—à–∞—Ç—å—Å—è –≤ —Å–¥–µ–ª–∫—É", callback_data=f"admin_intervene_{transaction_id}")]
            ])
        
        # Common actions
        keyboard.extend([
            [InlineKeyboardButton("üìä –î–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏", callback_data=f"admin_transaction_details_{transaction_id}")],
            [InlineKeyboardButton("üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏", callback_data=f"admin_contact_parties_{transaction_id}")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_transactions")]
        ])
        
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_pagination(data_type: str, page: int, total_pages: int) -> InlineKeyboardMarkup:
        """Admin pagination keyboard"""
        keyboard = []
        
        # Navigation buttons
        nav_row = []
        if page > 0:
            nav_row.append(InlineKeyboardButton("‚¨ÖÔ∏è –ü—Ä–µ–¥", callback_data=f"admin_page_{data_type}_{page-1}"))
        
        nav_row.append(InlineKeyboardButton(f"{page + 1}/{total_pages}", callback_data="admin_page_info"))
        
        if page < total_pages - 1:
            nav_row.append(InlineKeyboardButton("–°–ª–µ–¥ ‚û°Ô∏è", callback_data=f"admin_page_{data_type}_{page+1}"))
        
        keyboard.append(nav_row)
        
        # Back button
        keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"admin_{data_type}")])
        
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_confirmation(action: str, target_id: int = None) -> InlineKeyboardMarkup:
        """Admin confirmation keyboard"""
        confirm_data = f"admin_confirm_{action}"
        cancel_data = f"admin_cancel_{action}"
        
        if target_id:
            confirm_data += f"_{target_id}"
            cancel_data += f"_{target_id}"
        
        keyboard = [
            [InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=confirm_data)],
            [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=cancel_data)]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_time_extend_options(transaction_id: int) -> InlineKeyboardMarkup:
        """Time extension options for transactions"""
        keyboard = [
            [InlineKeyboardButton("‚è∞ +1 —á–∞—Å", callback_data=f"admin_extend_1h_{transaction_id}")],
            [InlineKeyboardButton("‚è∞ +3 —á–∞—Å–∞", callback_data=f"admin_extend_3h_{transaction_id}")],
            [InlineKeyboardButton("‚è∞ +6 —á–∞—Å–æ–≤", callback_data=f"admin_extend_6h_{transaction_id}")],
            [InlineKeyboardButton("‚è∞ +12 —á–∞—Å–æ–≤", callback_data=f"admin_extend_12h_{transaction_id}")],
            [InlineKeyboardButton("‚è∞ +24 —á–∞—Å–∞", callback_data=f"admin_extend_24h_{transaction_id}")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"admin_transaction_details_{transaction_id}")]
        ]
        return InlineKeyboardMarkup(keyboard)